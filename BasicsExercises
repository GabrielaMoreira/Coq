Fixpoint fatorial (n:nat) : nat :=
  match n with
    | 0 => 1
    | S n => S n * fatorial (n)
  end.
  
Example test_fatorial1: (fatorial 3) = 6.
Proof. simpl. reflexivity. Qed.

Example test_fatorial2: (fatorial 5) = 10*12.
Proof. simpl. reflexivity. Qed.

Fixpoint eq_nat (n m : nat) : bool :=
  match n with
    | 0 => match m with
            | 0 => true
            | S m => false
            end
    | S n => match m with
            | 0 => true
            | S m => eq_nat n m
            end
  end.

Fixpoint leb (n m : nat) : bool :=
  match n with
    | 0 => true
    | S n => match m with
               | 0 => false
               | S m => leb n m
             end
  end.

Definition blt_nat (n m : nat) : bool :=
  match leb n m with
    | false => false
    | true => match eq_nat n m with
                | true => false
                | false => true
              end
  end.

Example test_bn1: blt_nat 2 2 = false.
Proof. simpl. reflexivity. Qed.
Example test_bn2: blt_nat 2 4 = true.
Proof. simpl. reflexivity. Qed.
Example test_bn3: blt_nat 4 2 = false.
Proof. simpl. reflexivity. Qed.

Theorem plus_0_n : forall n:nat, n + 0 = n.
Proof. 
  intros n. simpl.
  Abort.

Theorem plus_n_0 :forall n:nat, n = 0 + n.
Proof. intros n. reflexivity. Qed.


